// set up a simple neutral simulation
initialize() {
	initializeSLiMModelType("nonWF");
	initializeMutationRate(0);
	initializeMutationType("m1", 0.5, "f", 0.0);
	initializeGenomicElementType("g1", m1, 1.0);
	initializeGenomicElement(g1, 0, 99999);
	initializeRecombinationRate(0);
	initializeTreeSeq(checkCoalescence=T);
	initializeSex();
	defineConstant('N', 316);
	defineConstant('CHILDS_PER_F', 2*2);
	defineGlobal('gen_max', 1e7);
	//setSeed(4421844);
}

reproduction(){
	if (individual.sex == 'F'){
		for (_ in 1:CHILDS_PER_F){
			mate = subpop.sampleIndividuals(1, sex='M', minAge=1);
			child = subpop.addCrossed(individual, mate);
			child.tagF = max(0.0, (mate.tagF + individual.tagF)/2 + runif(1));
		}	
	}
}

survival(){
	if (individual.age > 0){return F;}
	else {	
		if (individual.tagF < min_fitness){return F;} else {
			return T;
		}
	}
} 

// create a population of 500 individuals
1 early() {
	sim.addSubpop("p1", N);
	p1.individuals.tagF = 1.0;
	defineConstant('start_time', clock());
}

//NO REPRODUCTION at tick 1
//first -> reproduction -> early -> fitnessEffect -> survival -> late

1: early(){
	children = p1.individuals[p1.individuals.age == 0];
	sorted_fitness = sort(children.tagF, ascending=F);
	defineGlobal('min_fitness', sorted_fitness[N-1]);
}

(10*N):(10+10*N) late(){
	sim.treeSeqOutput("Brunet2 " + N + "_gen" + community.tick + ".trees");
}
